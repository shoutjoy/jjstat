% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cfa2.R
\name{cfa2}
\alias{cfa2}
\title{Create CFA result summary by lavaan sem estimated result By Park Joonghee Ph.D}
\usage{
cfa2(
  x,
  format = "markdown",
  dataset = NA,
  model = NA,
  cut = 0.7,
  angle = 90,
  cex = 11,
  hjust = 0.9,
  val.size = 4,
  dis.sort = TRUE,
  rename = F,
  var_name = NA,
  digits = 3,
  res = "all"
)
}
\arguments{
\item{x}{lavaan result}

\item{format}{knitr markdown decision}

\item{dataset}{this is import name that dataset column name}

\item{model}{lavaan model need indices validation name}

\item{cut}{loading criteran}

\item{angle}{tesxt angle}

\item{cex}{text size}

\item{hjust}{on text value gap}

\item{val.size}{text size}

\item{dis.sort}{item sort}

\item{rename}{item validiation new name apply}

\item{var_name}{new text name default NULL}

\item{digits}{value rounding}

\item{res}{result type}
}
\description{
Create CFA result summary by lavaan sem estimated result By Park Joonghee Ph.D
}
\examples{
# example code
\dontrun{

library(lavaan)
data(PoliticalDemocracy)

 model1 <- "
 # measurement model
   ind60 =~ x1 + x2 + x3
   dem60 =~ y1 + y2 + y3 + y4
   dem65 =~ y5 + y6 + y7 + y8
 # regressions
   dem60 ~ ind60
   dem65 ~ ind60 + dem60
 # residual correlations
   y1 ~~ y5
   y2 ~~ y4 + y6
   y3 ~~ y7
   y4 ~~ y8
   y6 ~~ y8"


#' fit1 <- sem(model1, data = PoliticalDemocracy)
## summary(fit2, standardized = TRUE)

## model 2 generate
model2 <- "
 ## measurement model
   ind60 =~ x1 + x2 + x3
   dem60 =~ y1 + y2 + y3 + y4
   dem65 =~ y5 + y6 + y7 + y8
 ## regressions
   dem60 ~ ind60
   dem65 ~ ind60 + dem60 "


fit2 <- sem(model2, data = PoliticalDemocracy)
## summary(fit2, standardized = TRUE)
##
 cfa2(fit1)
## if you wnat HTMT value, input model and dataset
cfa2(fit1, dataset = PoliticalDemocracy, model = model )

 cfa2(fit2)
## if you wnat HTMT value, input model and dataset
cfa2(fit2, dataset = PoliticalDemocracy, model = model )

#compare model fit and different values
CompareFit_diff(fit1, fit2)

# AVE calculatin by hand
AVE(fit1)
AVE(fit2)
# model fit
cfa2(fit1, dataset = PoliticalDemocracy, model = model,
     res =  "modelfit")

# item validattiy
cfa2(fit1, dataset = PoliticalDemocracy, model = model,
     res =  "loadings")

# Internal consistency
cfa2(fit1, dataset = PoliticalDemocracy, model = model,
     res =  "alpha")

cfa2(fit1, dataset = PoliticalDemocracy, model = model,
     res =  "CR_AVE")

# Discriminant
cfa2(fit1, dataset = PoliticalDemocracy, model = model,
     res =  "Discriminant")

# HTMT

cfa2(fit1, dataset = PoliticalDemocracy, model = model,
     format="markdown",
     res =  "htmt")

cfa2(fit, dataset = PoliticalDemocracy, model = model,
     format="html",
     res =  "htmt")\%>\%
  kable_minimal(full_width =F)

# structure correlation
cfa2(fit1, dataset = PoliticalDemocracy, model = model,
      res =  "str_cor")
}
}
