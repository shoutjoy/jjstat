% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plspm_permutation_test.R
\name{plspm_permutation_test}
\alias{plspm_permutation_test}
\title{잠재변수 평균값과 분산의 동일성을 평가하는 Permutation Test 함수}
\usage{
plspm_permutation_test(Data, path_matrix, blocks, grp, n_perm = 100)
}
\arguments{
\item{Data}{Data}

\item{path_matrix}{path_matrix}

\item{blocks}{blocks}

\item{grp}{grp = "gender"}

\item{n_perm}{default 100}
}
\value{
data
}
\description{
잠재변수 평균값과 분산의 동일성을 평가하는 Permutation Test 함수
}
\examples{
\dontrun{
#'
#'
jutpath1 = plspm_paths(
  row_names = c("SelfEff","CarMot","CarAtt","CarAct"),
  relationship = list(
    path(from="SelfEff", to=c("CarMot","CarAtt","CarAct")),
    path("CarMot", c("CarAct")),
    path("CarAtt", c("CarAct"))
  )  )
jutpath1


jut_blocks <- plspm_blocks(
  SelfEff = list("sef01", "sef02", "sef03", "sef04", "sef05"),
  CarMot = list("mot01","mot02","mot03"),
  #   CarAtt = item( "att01", "att02","att03","att04","att05" ),
  CarAtt = list("att03","att04","att05" ),
  CarAct = list("act01", "act02","act03")
)
jut_blocks


result_df <- plspm_permutation_test(Data = jut7c, path_matrix = jutpath1, blocks = jut_blocks, grp = "P01")


result_df
result_df \%>\%Round(17)\%>\%dall()


}

}
